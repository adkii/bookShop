<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.mld.mapper.AppuserMapper" >
  <resultMap id="BaseResultMap" type="org.mld.po.Appuser" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="info_id" property="infoId" jdbcType="INTEGER" />
    <result column="login_count" property="loginCount" jdbcType="INTEGER" />
    <result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
    <result column="creator_id" property="creatorId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="is_valid" property="isValid" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, login_name, user_name, password, info_id, login_count, login_time, creator_id, 
    create_time, is_valid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.mld.po.AppuserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from appuser
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from appuser
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from appuser
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.mld.po.AppuserExample" >
    delete from appuser
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.mld.po.Appuser" >
    insert into appuser (user_id, login_name, user_name, 
      password, info_id, login_count, 
      login_time, creator_id, create_time, 
      is_valid)
    values (#{userId,jdbcType=INTEGER}, #{loginName,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{infoId,jdbcType=INTEGER}, #{loginCount,jdbcType=INTEGER}, 
      #{loginTime,jdbcType=TIMESTAMP}, #{creatorId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{isValid,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="org.mld.po.Appuser" >
    insert into appuser
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="loginName != null" >
        login_name,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="infoId != null" >
        info_id,
      </if>
      <if test="loginCount != null" >
        login_count,
      </if>
      <if test="loginTime != null" >
        login_time,
      </if>
      <if test="creatorId != null" >
        creator_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="isValid != null" >
        is_valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="infoId != null" >
        #{infoId,jdbcType=INTEGER},
      </if>
      <if test="loginCount != null" >
        #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null" >
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null" >
        #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null" >
        #{isValid,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.mld.po.AppuserExample" resultType="java.lang.Integer" >
    select count(*) from appuser
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update appuser
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.loginName != null" >
        login_name = #{record.loginName,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.infoId != null" >
        info_id = #{record.infoId,jdbcType=INTEGER},
      </if>
      <if test="record.loginCount != null" >
        login_count = #{record.loginCount,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null" >
        login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creatorId != null" >
        creator_id = #{record.creatorId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isValid != null" >
        is_valid = #{record.isValid,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update appuser
    set user_id = #{record.userId,jdbcType=INTEGER},
      login_name = #{record.loginName,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      info_id = #{record.infoId,jdbcType=INTEGER},
      login_count = #{record.loginCount,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      creator_id = #{record.creatorId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      is_valid = #{record.isValid,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.mld.po.Appuser" >
    update appuser
    <set >
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="infoId != null" >
        info_id = #{infoId,jdbcType=INTEGER},
      </if>
      <if test="loginCount != null" >
        login_count = #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null" >
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null" >
        creator_id = #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null" >
        is_valid = #{isValid,jdbcType=BIT},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.mld.po.Appuser" >
    update appuser
    set login_name = #{loginName,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      info_id = #{infoId,jdbcType=INTEGER},
      login_count = #{loginCount,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      creator_id = #{creatorId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_valid = #{isValid,jdbcType=BIT}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>